<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Văn bản Từng chữ</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            transition: background-color 0.5s, color 0.5s;
        }
        .container {
            max-width: 100%;
            margin: auto;
            padding: 10px;
            text-align: center;
        }
        input[type="text"], button {
            margin: 5px;
            padding: 10px;
            font-size: 1em;
            width: 100px;
        }
        input[type="text"] {
            flex: 1;
            min-width: 150px;
        }
        .control-group {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            align-items: center;
        }
        .control-group > * {
            margin: 5px;
        }
        .display-word {
            font-size: 32px;
            margin-top: 20px;
        }
        .hidden {
            display: none;
        }
        .dark-mode {
            background-color: #121212;
            color: #d3d3d3;
        }
        button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
        .list-container {
            display: none;
            max-height: 300px;
            overflow-y: scroll;
            border: 1px solid #ccc;
            margin: 10px 0;
        }
        .list-item {
            display: flex;
            align-items: center;
            padding: 5px;
            border-bottom: 1px solid #ddd;
        }
        .list-item.active {
            background-color: yellow;
        }
        .list-item input[type="text"] {
            margin-left: 10px;
            flex: 1;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="control-group">
            <button id="list-btn">Danh sách</button>
            <input type="text" id="textInput" placeholder="Nhập đoạn văn...">
            <button id="decrease-speed">Giảm tốc</button>
            <button id="play-btn" disabled>Play</button>
            <button id="increase-speed">Tăng tốc</button>
            <button id="new-btn">Tạo mới</button>
        </div>
        <div class="control-group">
            <span id="speed-display">Tốc độ: 150 từ/phút</span>
        </div>
        <div class="control-group">
            <button id="minus-font">Giảm size</button>
            <span id="font-size-display">Size chữ: 32px</span>
            <button id="plus-font">Tăng size</button>
        </div>
        <div class="control-group">
            <button id="previous-word" disabled>Trừ 5 từ</button>
            <button id="next-word" disabled>Cộng 5 từ</button>
        </div>
        <div class="control-group">
            <button id="toggle-dark-mode">Bật</button>
        </div>
        <div class="control-group">
            <span id="timer-display">Thời gian: 00:00</span>
        </div>
        <div class="display-word" id="displayWord"></div>
       
        <div class="control-group list-container" id="list-container">
            <button id="close-list-btn">Đóng</button>
            <button id="add-item-btn">Thêm</button>
            <div id="list"></div>
        </div>
    </div>

    <script>
        let words = [];
        let currentIndex = 0;
        let interval;
        let speed = 150;
        let isPlaying = false;
        let fontSize = 32;
        let isDarkMode = false;
        let timer;
        let startTime;
        let elapsedTime = 0;
        let stories = JSON.parse(localStorage.getItem('stories')) || [];

        const textInput = document.getElementById('textInput');
        const playBtn = document.getElementById('play-btn');
        const displayWord = document.getElementById('displayWord');
        const speedDisplay = document.getElementById('speed-display');
        const fontSizeDisplay = document.getElementById('font-size-display');
        const toggleDarkModeBtn = document.getElementById('toggle-dark-mode');
        const timerDisplay = document.getElementById('timer-display');
        const previousWordBtn = document.getElementById('previous-word');
        const nextWordBtn = document.getElementById('next-word');
        const listContainer = document.getElementById('list-container');
        const list = document.getElementById('list');

        textInput.addEventListener('input', () => {
            playBtn.disabled = textInput.value.trim() === '';
            previousWordBtn.disabled = textInput.value.trim() === '';
            nextWordBtn.disabled = textInput.value.trim() === '';
        });

        playBtn.addEventListener('click', () => {
            if (isPlaying) {
                clearInterval(interval);
                clearInterval(timer);
                playBtn.textContent = 'Play';
                elapsedTime += Date.now() - startTime;
            } else {
                if (currentIndex === 0) {
                    words = textInput.value.trim().split(/\s+/);
                    elapsedTime = 0;
                }
                interval = setInterval(displayNextWord, 60000 / speed);
                startTime = Date.now();
                timer = setInterval(updateTimerDisplay, 1000);
                playBtn.textContent = 'Pause';
            }
            isPlaying = !isPlaying;
            updateNavigationButtons();
        });

        document.getElementById('decrease-speed').addEventListener('click', () => {
            speed = Math.max(50, speed - 50);
            updateSpeedDisplay();
        });

        document.getElementById('increase-speed').addEventListener('click', () => {
            speed = Math.min(500, speed + 50);
            updateSpeedDisplay();
        });

        document.getElementById('minus-font').addEventListener('mousedown', () => {
            adjustFontSize(-1);
        });

        document.getElementById('plus-font').addEventListener('mousedown', () => {
            adjustFontSize(1);
        });

        document.getElementById('new-btn').addEventListener('click', () => {
            clearInterval(interval);
            clearInterval(timer);
            isPlaying = false;
            currentIndex = 0;
            textInput.value = '';
            displayWord.textContent = '';
            playBtn.textContent = 'Play';
            playBtn.disabled = true;
            elapsedTime = 0;
            updateTimerDisplay();
            updateNavigationButtons();
        });

        document.getElementById('list-btn').addEventListener('click', () => {
            listContainer.style.display = 'block';
            renderList();
        });

        document.getElementById('close-list-btn').addEventListener('click', () => {
            listContainer.style.display = 'none';
        });

        document.getElementById('add-item-btn').addEventListener('click', addItem);

        toggleDarkModeBtn.addEventListener('click', () => {
            isDarkMode = !isDarkMode;
            document.body.classList.toggle('dark-mode', isDarkMode);
            toggleDarkModeBtn.textContent = isDarkMode ? 'Tắt' : 'Bật';
            localStorage.setItem('isDarkMode', isDarkMode);
        });

        previousWordBtn.addEventListener('click', () => {
            currentIndex = Math.max(0, currentIndex - 5);
            displayWord.textContent = words[currentIndex] || '';
            updateNavigationButtons();
        });

        nextWordBtn.addEventListener('click', () => {
            currentIndex = Math.min(words.length - 1, currentIndex + 5);
            displayWord.textContent = words[currentIndex] || '';
            updateNavigationButtons();
        });

        function displayNextWord() {
            if (currentIndex < words.length) {
                displayWord.textContent = words[currentIndex++];
                updateNavigationButtons();
                localStorage.setItem('currentIndex', currentIndex);
            } else {
                clearInterval(interval);
                clearInterval(timer);
                playBtn.textContent = 'Play';
                playBtn.disabled = true;
                isPlaying = false;
            }
        }

        function updateSpeedDisplay() {
            speedDisplay.textContent = `Tốc độ: ${speed} từ/phút`;
            if (isPlaying) {
                clearInterval(interval);
                interval = setInterval(displayNextWord, 60000 / speed);
            }
            localStorage.setItem('speed', speed);
        }

        function adjustFontSize(change) {
            fontSize = Math.max(8, Math.min(72, fontSize + change));
            displayWord.style.fontSize = `${fontSize}px`;
            fontSizeDisplay.textContent = `Size chữ: ${fontSize}px`;
            localStorage.setItem('fontSize', fontSize);
        }

        function updateTimerDisplay() {
            const totalTime = elapsedTime + (isPlaying ? Date.now() - startTime : 0);
            const minutes = Math.floor(totalTime / 60000);
            const seconds = Math.floor((totalTime % 60000) / 1000);
            timerDisplay.textContent = `Thời gian: ${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
        }

        function updateNavigationButtons() {
            previousWordBtn.disabled = currentIndex <= 0 || textInput.value.trim() === '';
            nextWordBtn.disabled = currentIndex >= words.length - 1 || textInput.value.trim() === '';
        }

        function addItem() {
            const itemIndex = stories.length + 1;
            const newItem = {
                id: itemIndex,
                text: '',
                name: `Câu chuyện ${itemIndex}`
            };
            stories.push(newItem);
            localStorage.setItem('stories', JSON.stringify(stories));
            renderList();
        }

        function renderList() {
            list.innerHTML = '';
            stories.forEach((story, index) => {
                const listItem = document.createElement('div');
                listItem.className = 'list-item';
                listItem.innerHTML = `
                    <span>${story.name}</span>
                    <input type="text" value="${story.text}" data-id="${story.id}">
                    <button class="rename-btn" data-id="${story.id}">Đổi tên</button>
                `;
                listItem.querySelector('input').addEventListener('input', (event) => {
                    const id = parseInt(event.target.dataset.id, 10);
                    const story = stories.find(s => s.id === id);
                    story.text = event.target.value;
                    localStorage.setItem('stories', JSON.stringify(stories));
                });
                listItem.querySelector('.rename-btn').addEventListener('click', () => {
                    const newName = prompt('Nhập tên mới:', story.name);
                    if (newName) {
                        story.name = newName;
                        localStorage.setItem('stories', JSON.stringify(stories));
                        renderList();
                    }
                });
                listItem.addEventListener('click', () => {
                    if (story.text.trim() !== '') {
                        listItem.classList.add('active');
                        setTimeout(() => {
                            listItem.classList.remove('active');
                            listContainer.style.display = 'none';
                        }, 2000);
                        textInput.value = story.text;
                        words = textInput.value.trim().split(/\s+/);
                        currentIndex = 0;
                        displayWord.textContent = '';
                        playBtn.disabled = false;
                        previousWordBtn.disabled = false;
                        nextWordBtn.disabled = false;
                    }
                });
                list.appendChild(listItem);
            });
        }

        function loadState() {
            if (localStorage.getItem('textInput')) {
                textInput.value = localStorage.getItem('textInput');
                words = textInput.value.trim().split(/\s+/);
                playBtn.disabled = textInput.value.trim() === '';
                previousWordBtn.disabled = textInput.value.trim() === '';
                nextWordBtn.disabled = textInput.value.trim() === '';
            }
            if (localStorage.getItem('speed')) {
                speed = parseInt(localStorage.getItem('speed'), 10);
                speedDisplay.textContent = `Tốc độ: ${speed} từ/phút`;
            }
            if (localStorage.getItem('fontSize')) {
                fontSize = parseInt(localStorage.getItem('fontSize'), 10);
                displayWord.style.fontSize = `${fontSize}px`;
                fontSizeDisplay.textContent = `Size chữ: ${fontSize}px`;
            }
            if (localStorage.getItem('isDarkMode')) {
                isDarkMode = localStorage.getItem('isDarkMode') === 'true';
                document.body.classList.toggle('dark-mode', isDarkMode);
                toggleDarkModeBtn.textContent = isDarkMode ? 'Tắt' : 'Bật';
            }
            if (localStorage.getItem('currentIndex')) {
                currentIndex = parseInt(localStorage.getItem('currentIndex'), 10);
            }
            if (localStorage.getItem('elapsedTime')) {
                elapsedTime = parseInt(localStorage.getItem('elapsedTime'), 10);
                updateTimerDisplay();
            }
            if (localStorage.getItem('stories')) {
                stories = JSON.parse(localStorage.getItem('stories'));
                renderList();
            }
            updateNavigationButtons();
        }

        function saveState() {
            localStorage.setItem('textInput', textInput.value);
            localStorage.setItem('currentIndex', currentIndex);
            localStorage.setItem('speed', speed);
            localStorage.setItem('fontSize', fontSize);
            localStorage.setItem('isDarkMode', isDarkMode);
            localStorage.setItem('elapsedTime', elapsedTime + (isPlaying ? Date.now() - startTime : 0));
            localStorage.setItem('stories', JSON.stringify(stories));
        }

        window.addEventListener('beforeunload', saveState);
        document.addEventListener('DOMContentLoaded', loadState);
    </script>
</body>
</html>